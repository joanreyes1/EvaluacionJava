package com.cmc.evaluacion.fase2.servicios;

public class AdminPrestamos {
	public void colocarPrestamos(String ruta, Cartera cartera) {
		File archivo = new File(ruta);
		FileReader fileReader = null;
		BufferedReader br = null;
		String linea = null;
		try {
			fileReader = new FileReader(archivo);
			br = new BufferedReader(fileReader);
			while ((linea = br.readLine()) != null) {
				LOGGER.trace("linea: " + linea);
				armarPrestamo(linea, cartera);
			}
		} catch (FileNotFoundException e) {
			LOGGER.error("No se encuentra el archivo ", e);
			throw new EvaluacionException("No se encontro el archivo: " + ruta);
		} catch (IOException e) {
			LOGGER.error("Error al leer el archivo ", e);
			throw new EvaluacionException("Error a leer el archivo: " + ruta);
		} finally {
			try {
				if (fileReader != null) {
					fileReader.close();
				}
				if (br != null) {
					br.close();
				}
			} catch (IOException e) {
				LOGGER.error("Error al cerrar los Readers", e);
			}

		}

	}

	public void armarPrestamo(String linea, Cartera cartera){
		String letra = null;
		Prestamo prestamo = null;
		String[] pedazos = new String[4];
		try {
			pedazos = linea.split("-");
			letra = pedazos[1].substring(0, 1);
			if (letra.equals(TipoPrestamo.HIPOTECARIO)) {
				letra = "H";
			}else if(letra.equals(TipoPrestamo.QUIROGRAFARIO)){
				letra = "Q";
			}else{
				letra = "O";
			}
			prestamo = new Prestamo(pedazos[1], pedazos[0]);
			prestamo.setTipo(letra);
			prestamo.setFecha(DateUtil.convertir(pedazos[2]));
			prestamo.setMonto(Double.parseDouble(pedazos[3]));
			cartera.colocarPrestamo(prestamo);
		} catch (Exception e) {
			LOGGER.error("Error al armar el prestamo", e);
		}
}
